@model IPagedList<DocumentViewModel>


@{
//var searchT = ViewBag.SearchTerm;
//var categ = ViewBag.Category;
//var searchT = Session["SearchTerm"];
//var categ = Session["Category"];
}
@*<input type="hidden" name="searchTerm" value=@searchT />*@

<div id="documentList">
    @*<p> session searchterm : @Session["SearchTerm"]</p>
    <p> session category : @Session["SelectedCategory"]</p>*@ 

    <div class="pagedList" data-otf-target="#documentList">
        @Html.PagedListPager(Model, page => Url.Action("DisplayAll", new {page = page, sort = ViewBag.SortOrder}),
            PagedListRenderOptions.MinimalWithItemCountText)
    </div>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
            </th>
            <th>
                Category
            </th>
            <th>
                @Ajax.ActionLink(
                    "Rating",
                    "DisplayWithFilters",
                    "Document",
                    new
                    {
                        sort = "Rating"
                        //searchTerm = @searchT,
                        //category = @categ
                    },
                    new AjaxOptions
                    {
                        HttpMethod = "get",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "documentList"
                    })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Available)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentCategories)
                </td>
                <td>

                    @if (item.Rating >= 50)
                    {
                        <i class="fa fa-thumbs-o-up" style="color: #008CBA"></i>
                    }
                    else
                    {
                        <i class="fa fa-thumbs-o-up" style="color: grey"></i>
                    }
                    @Html.DisplayFor(modelItem => item.Rating) %
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Available)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id}) |
                    @Html.ActionLink("Details", "Details", new {id = item.Id}) |
                    @Html.ActionLink("Delete", "Delete", new {id = item.Id}) |
                    @{
                        if (item.Available == false)
                        {
                            <a class="linkdisabled">GRAB</a>

                        }
                        else
                        {
                            @Html.ActionLink("GRAB", "Grab", new {id = item.Id}, new {@class = "blueButtonLink"})
                        }
                    } |
                    @Html.ActionLink("Review", "Index", "Review", new {id = item.Id}, null)
                </td>
            </tr>
        }

    </table>
</div>

